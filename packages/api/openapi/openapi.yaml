openapi: 3.0.3
info:
  title: SMB Booking API
  version: 1.0.0
servers:
  - url: https://api.example.com
paths:
  /v1/services:
    get:
      summary: List services
      parameters:
        - in: query
          name: accountId
          schema: { type: string, format: uuid }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  services:
                    type: array
                    items:
                      $ref: '#/components/schemas/Service'
  /v1/availability:
    get:
      summary: Get availability
      parameters:
        - in: query
          name: accountId
          schema: { type: string }
        - in: query
          name: serviceId
          schema: { type: string }
        - in: query
          name: start
          schema: { type: string, format: date-time }
        - in: query
          name: end
          schema: { type: string, format: date-time }
        - in: query
          name: tz
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  slots:
                    type: array
                    items: { type: string, format: date-time }
  /v1/appointments:
    post:
      summary: Create appointment
      security:
        - hmac: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'
  /v1/appointments/{id}/cancel:
    post:
      summary: Cancel appointment
      security:
        - hmac: []
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'
  /v1/appointments/{id}/reschedule:
    post:
      summary: Reschedule appointment
      security:
        - hmac: []
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newStartTime: { type: string, format: date-time }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'
components:
  securitySchemes:
    hmac:
      type: apiKey
      in: header
      name: X-Signature
  schemas:
    Service:
      type: object
      properties:
        id: { type: string }
        name: { type: string }
        duration_min: { type: integer }
        buffer_before_min: { type: integer }
        buffer_after_min: { type: integer }
    AppointmentRequest:
      type: object
      required: [accountId, serviceId, startTime, customer]
      properties:
        accountId: { type: string }
        serviceId: { type: string }
        startTime: { type: string, format: date-time }
        customer:
          type: object
          required: [name, email]
          properties:
            name: { type: string }
            email: { type: string, format: email }
            phone: { type: string }
        notes: { type: string }
        source: { type: string, enum: [human, agent, api] }
        metadata: { type: object, additionalProperties: true }
    AppointmentResponse:
      type: object
      properties:
        id: { type: string }
        status: { type: string, enum: [requested, tentative, confirmed, canceled, no_show] }
        startTime: { type: string, format: date-time }
        endTime: { type: string, format: date-time }
        provider_event_id: { type: string }
        links:
          type: object
          properties:
            ical: { type: string, format: uri }
            manage: { type: string, format: uri }
